{"version":3,"sources":["util/addComma.js","components/Repo/Repo.js","api/fetchRepos.js","components/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["addComma","number","digitArray","toString","split","reduceRight","acc","digit","i","distanceFromEnd","length","Repo","_ref","url","name","description","license","stars","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","className","href","type","onClick","normalizeJson","json","items","map","id","html_url","stargazers_count","fetchRepos","_ref2","asyncToGenerator","regenerator_default","mark","_callee","topic","res","wrap","_context","prev","next","fetch","concat","sent","abrupt","stop","this","_x","apply","arguments","Search","state","repos","updateTopic","ev","target","value","_this","setState","onSubmitForm","preventDefault","props","_this$state","onSubmit","htmlFor","onChange","required","Fragment","repo","key","components_Repo_Repo","Component","defaultProps","Home","es","to","App","App_Home","path","default","components_Search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd7a035d.chunk.js","sourcesContent":["const addComma = number => {\n  const digitArray = number.toString().split('');\n  return digitArray.reduceRight((acc, digit, i) => {\n    const distanceFromEnd = digitArray.length - (i + 1);\n    const shouldInsertComma = distanceFromEnd > 0 && distanceFromEnd % 3 === 0;\n    const comma = shouldInsertComma ? ',' : '';\n    return digit + comma + acc;\n  }, '');\n};\n\nexport default addComma","import React, { useState } from 'react';\nimport { addComma } from '../../util';\nimport './Repo.css';\n\nconst Repo = ({ url, name, description, license, stars }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <article className=\"Repo\">\n      <h2 className=\"Repo__name\">\n        <a href={url}>{name}</a>\n      </h2>\n      <h3 className=\"Repo__description\">{description}</h3>\n\n      <div className=\"Repo__moreContent\">\n        {isOpen && (\n          <ul>\n            <li>Stars: {addComma(stars)}</li>\n            <li>License: {license || 'Not available'}</li>\n          </ul>\n        )}\n      </div>\n\n      <button\n        className=\"Repo__toggleExpand\"\n        type=\"button\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {isOpen ? 'See Less' : 'See More'}\n      </button>\n    </article>\n  );\n};\n\nexport default Repo;\n","const GITHUB_API_URL = 'https://api.github.com';\n\nexport const normalizeJson = json => {\n  const { items } = json;\n  return items.map(\n    ({\n      id,\n      name,\n      description,\n      html_url: url,\n      stargazers_count: stars,\n      license,\n    }) => ({\n      id,\n      name,\n      description,\n      url,\n      stars,\n      license: license ? license.name : null,\n    })\n  );\n};\n\nexport const fetchRepos = async topic => {\n  const res = await fetch(`${GITHUB_API_URL}/search/repositories?q=${topic}`);\n  const json = await res.json();\n  return normalizeJson(json);\n};\n","import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Repo from '../Repo';\nimport { fetchRepos } from '../../api/fetchRepos';\nimport './Search.css';\n\nclass Search extends Component {\n  state = {\n    topic: '',\n    repos: [],\n  };\n\n  updateTopic = ev => {\n    const topic = ev.target.value;\n    this.setState({ topic });\n  };\n\n  onSubmitForm = async ev => {\n    ev.preventDefault();\n\n    const { fetchRepos } = this.props;\n    const { topic } = this.state;\n\n    const repos = await fetchRepos(\n      topic\n    );\n    this.setState({ repos });\n  };\n\n  render() {\n    const { topic, repos } = this.state;\n\n    return (\n      <div className=\"Search\">\n        <form\n          className=\"Form\"\n          onSubmit={this.onSubmitForm}\n        >\n          <label\n            className=\"Form__label\"\n            htmlFor=\"formTopic\"\n          >\n            Topic\n          </label>\n          <input\n            className=\"Form__input\"\n            id=\"formTopic\"\n            name=\"topic\"\n            type=\"text\"\n            value={topic}\n            onChange={this.updateTopic}\n            required\n          />\n          <button\n            className=\"Form__button\"\n            type=\"submit\"\n          >\n            Search!\n          </button>\n        </form>\n\n        {repos.length > 0 && (\n          <>\n            <h2>Matching Repos:</h2>\n            <ul className=\"Search-repoList\">\n              {repos.map(repo => (\n                <li\n                  className=\"Search-repoListItem\"\n                  key={repo.id}\n                >\n                  <Repo {...repo} />\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  fetchRepos: PropTypes.func,\n};\n\nSearch.defaultProps = {\n  fetchRepos,\n};\n\nexport default Search;\n","import React from 'react';\nimport {\n  Router,\n  Link,\n} from '@reach/router';\nimport { Search } from './components';\nimport './App.css';\n\nconst Home = () => (\n  <>\n    <main className=\"Home\">\n      <h1 className=\"Home__heading\">\n        Shipping with Confidence\n      </h1>\n      <h2 className=\"Home__subheading\">\n        Testing React Apps\n      </h2>\n    </main>\n    <footer className=\"Home__footer\">\n      <div>\n        <h3 className=\"Home__demo\">\n          <Link to=\"/search\">\n            View the Demo\n          </Link>\n        </h3>\n      </div>\n      <div>\n        <h3 className=\"Home__social\">\n          <a href=\"https://twitter.com/benjamminj\">\n            @benjamminj\n          </a>\n        </h3>\n        <h3 className=\"Home__social\">\n          <a href=\"https://twitter.com/hashtag/javascriptla?src=hashtag_click\">\n            #javascriptla\n          </a>\n        </h3>\n      </div>\n    </footer>\n  </>\n);\n\nconst App = () => (\n  <Router>\n    <Home path=\"/\" default />\n    <Search path=\"/search\" />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}